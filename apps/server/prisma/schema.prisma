// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  // TODO: Using `pnpm deploy` with prisma is quite annoying. We should consider generating the prisma client into
  // a directory within the package here instead of generating it into node modules (default).
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model SpaceEvent {
  id        String   @id
  event     String
  state     String
  counter   Int
  space     Space    @relation(fields: [spaceId], references: [id])
  spaceId   String
  createdAt DateTime @default(now())

  @@unique([spaceId, counter])
}

model Space {
  id          String       @id
  events      SpaceEvent[]
  members     Account[]
  invitations Invitation[]
  keys        SpaceKey[]
  updates     Update[]
}

model SpaceKey {
  id        String        @id
  space     Space         @relation(fields: [spaceId], references: [id])
  spaceId   String
  createdAt DateTime      @default(now())
  keyBoxes  SpaceKeyBox[]
}

model SpaceKeyBox {
  id              String   @id
  spaceKey        SpaceKey @relation(fields: [spaceKeyId], references: [id])
  spaceKeyId      String
  account         Account  @relation(fields: [accountId], references: [id])
  accountId       String
  ciphertext      String
  nonce           String
  authorPublicKey String
  createdAt       DateTime @default(now())
}

model Account {
  id                  String        @id
  spaces              Space[]
  invitations         Invitation[]
  keyBoxes            SpaceKeyBox[]
  identities          Identity[]
  sessionNonce          String?
  sessionToken          String?
  sessionTokenExpires   DateTime?

  @@index([sessionToken])
}

model Invitation {
  id               String   @id
  space            Space    @relation(fields: [spaceId], references: [id])
  spaceId          String
  account          Account  @relation(fields: [accountId], references: [id])
  accountId        String
  inviteeAccountId String
  createdAt        DateTime @default(now())

  @@unique([spaceId, inviteeAccountId])
}

model Update {
  space   Space  @relation(fields: [spaceId], references: [id])
  spaceId String
  clock   Int
  content Bytes

  @@id([spaceId, clock])
}

model Identity {
  account             Account  @relation(fields: [accountId], references: [id])
  accountId           String
  ciphertext          String
  nonce               String
  signaturePublicKey  String
  encryptionPublicKey String
  accountProof        String
  keyProof            String

  @@id([accountId, nonce])
}
