/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticateSuccessRouteImport } from './routes/authenticate-success'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SpaceSpaceIdRouteImport } from './routes/space/$spaceId'
import { Route as FriendsAccountIdRouteImport } from './routes/friends/$accountId'
import { Route as AccountInboxInboxIdRouteImport } from './routes/account-inbox/$inboxId'
import { Route as SpaceSpaceIdIndexRouteImport } from './routes/space/$spaceId/index'
import { Route as SpaceSpaceIdUsersRouteImport } from './routes/space/$spaceId/users'
import { Route as SpaceSpaceIdPublicIntegrationRouteImport } from './routes/space/$spaceId/public-integration'
import { Route as SpaceSpaceIdPlaygroundRouteImport } from './routes/space/$spaceId/playground'
import { Route as SpaceSpaceIdChatRouteImport } from './routes/space/$spaceId/chat'

const PlaygroundLazyRouteImport = createFileRoute('/playground')()
const LoginLazyRouteImport = createFileRoute('/login')()

const PlaygroundLazyRoute = PlaygroundLazyRouteImport.update({
  id: '/playground',
  path: '/playground',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/playground.lazy').then((d) => d.Route))
const LoginLazyRoute = LoginLazyRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))
const AuthenticateSuccessRoute = AuthenticateSuccessRouteImport.update({
  id: '/authenticate-success',
  path: '/authenticate-success',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SpaceSpaceIdRoute = SpaceSpaceIdRouteImport.update({
  id: '/space/$spaceId',
  path: '/space/$spaceId',
  getParentRoute: () => rootRouteImport,
} as any)
const FriendsAccountIdRoute = FriendsAccountIdRouteImport.update({
  id: '/friends/$accountId',
  path: '/friends/$accountId',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountInboxInboxIdRoute = AccountInboxInboxIdRouteImport.update({
  id: '/account-inbox/$inboxId',
  path: '/account-inbox/$inboxId',
  getParentRoute: () => rootRouteImport,
} as any)
const SpaceSpaceIdIndexRoute = SpaceSpaceIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SpaceSpaceIdRoute,
} as any)
const SpaceSpaceIdUsersRoute = SpaceSpaceIdUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => SpaceSpaceIdRoute,
} as any)
const SpaceSpaceIdPublicIntegrationRoute =
  SpaceSpaceIdPublicIntegrationRouteImport.update({
    id: '/public-integration',
    path: '/public-integration',
    getParentRoute: () => SpaceSpaceIdRoute,
  } as any)
const SpaceSpaceIdPlaygroundRoute = SpaceSpaceIdPlaygroundRouteImport.update({
  id: '/playground',
  path: '/playground',
  getParentRoute: () => SpaceSpaceIdRoute,
} as any)
const SpaceSpaceIdChatRoute = SpaceSpaceIdChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => SpaceSpaceIdRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/authenticate-success': typeof AuthenticateSuccessRoute
  '/login': typeof LoginLazyRoute
  '/playground': typeof PlaygroundLazyRoute
  '/account-inbox/$inboxId': typeof AccountInboxInboxIdRoute
  '/friends/$accountId': typeof FriendsAccountIdRoute
  '/space/$spaceId': typeof SpaceSpaceIdRouteWithChildren
  '/space/$spaceId/chat': typeof SpaceSpaceIdChatRoute
  '/space/$spaceId/playground': typeof SpaceSpaceIdPlaygroundRoute
  '/space/$spaceId/public-integration': typeof SpaceSpaceIdPublicIntegrationRoute
  '/space/$spaceId/users': typeof SpaceSpaceIdUsersRoute
  '/space/$spaceId/': typeof SpaceSpaceIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/authenticate-success': typeof AuthenticateSuccessRoute
  '/login': typeof LoginLazyRoute
  '/playground': typeof PlaygroundLazyRoute
  '/account-inbox/$inboxId': typeof AccountInboxInboxIdRoute
  '/friends/$accountId': typeof FriendsAccountIdRoute
  '/space/$spaceId/chat': typeof SpaceSpaceIdChatRoute
  '/space/$spaceId/playground': typeof SpaceSpaceIdPlaygroundRoute
  '/space/$spaceId/public-integration': typeof SpaceSpaceIdPublicIntegrationRoute
  '/space/$spaceId/users': typeof SpaceSpaceIdUsersRoute
  '/space/$spaceId': typeof SpaceSpaceIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/authenticate-success': typeof AuthenticateSuccessRoute
  '/login': typeof LoginLazyRoute
  '/playground': typeof PlaygroundLazyRoute
  '/account-inbox/$inboxId': typeof AccountInboxInboxIdRoute
  '/friends/$accountId': typeof FriendsAccountIdRoute
  '/space/$spaceId': typeof SpaceSpaceIdRouteWithChildren
  '/space/$spaceId/chat': typeof SpaceSpaceIdChatRoute
  '/space/$spaceId/playground': typeof SpaceSpaceIdPlaygroundRoute
  '/space/$spaceId/public-integration': typeof SpaceSpaceIdPublicIntegrationRoute
  '/space/$spaceId/users': typeof SpaceSpaceIdUsersRoute
  '/space/$spaceId/': typeof SpaceSpaceIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/authenticate-success'
    | '/login'
    | '/playground'
    | '/account-inbox/$inboxId'
    | '/friends/$accountId'
    | '/space/$spaceId'
    | '/space/$spaceId/chat'
    | '/space/$spaceId/playground'
    | '/space/$spaceId/public-integration'
    | '/space/$spaceId/users'
    | '/space/$spaceId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/authenticate-success'
    | '/login'
    | '/playground'
    | '/account-inbox/$inboxId'
    | '/friends/$accountId'
    | '/space/$spaceId/chat'
    | '/space/$spaceId/playground'
    | '/space/$spaceId/public-integration'
    | '/space/$spaceId/users'
    | '/space/$spaceId'
  id:
    | '__root__'
    | '/'
    | '/authenticate-success'
    | '/login'
    | '/playground'
    | '/account-inbox/$inboxId'
    | '/friends/$accountId'
    | '/space/$spaceId'
    | '/space/$spaceId/chat'
    | '/space/$spaceId/playground'
    | '/space/$spaceId/public-integration'
    | '/space/$spaceId/users'
    | '/space/$spaceId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticateSuccessRoute: typeof AuthenticateSuccessRoute
  LoginLazyRoute: typeof LoginLazyRoute
  PlaygroundLazyRoute: typeof PlaygroundLazyRoute
  AccountInboxInboxIdRoute: typeof AccountInboxInboxIdRoute
  FriendsAccountIdRoute: typeof FriendsAccountIdRoute
  SpaceSpaceIdRoute: typeof SpaceSpaceIdRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/playground': {
      id: '/playground'
      path: '/playground'
      fullPath: '/playground'
      preLoaderRoute: typeof PlaygroundLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/authenticate-success': {
      id: '/authenticate-success'
      path: '/authenticate-success'
      fullPath: '/authenticate-success'
      preLoaderRoute: typeof AuthenticateSuccessRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/space/$spaceId': {
      id: '/space/$spaceId'
      path: '/space/$spaceId'
      fullPath: '/space/$spaceId'
      preLoaderRoute: typeof SpaceSpaceIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/friends/$accountId': {
      id: '/friends/$accountId'
      path: '/friends/$accountId'
      fullPath: '/friends/$accountId'
      preLoaderRoute: typeof FriendsAccountIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account-inbox/$inboxId': {
      id: '/account-inbox/$inboxId'
      path: '/account-inbox/$inboxId'
      fullPath: '/account-inbox/$inboxId'
      preLoaderRoute: typeof AccountInboxInboxIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/space/$spaceId/': {
      id: '/space/$spaceId/'
      path: '/'
      fullPath: '/space/$spaceId/'
      preLoaderRoute: typeof SpaceSpaceIdIndexRouteImport
      parentRoute: typeof SpaceSpaceIdRoute
    }
    '/space/$spaceId/users': {
      id: '/space/$spaceId/users'
      path: '/users'
      fullPath: '/space/$spaceId/users'
      preLoaderRoute: typeof SpaceSpaceIdUsersRouteImport
      parentRoute: typeof SpaceSpaceIdRoute
    }
    '/space/$spaceId/public-integration': {
      id: '/space/$spaceId/public-integration'
      path: '/public-integration'
      fullPath: '/space/$spaceId/public-integration'
      preLoaderRoute: typeof SpaceSpaceIdPublicIntegrationRouteImport
      parentRoute: typeof SpaceSpaceIdRoute
    }
    '/space/$spaceId/playground': {
      id: '/space/$spaceId/playground'
      path: '/playground'
      fullPath: '/space/$spaceId/playground'
      preLoaderRoute: typeof SpaceSpaceIdPlaygroundRouteImport
      parentRoute: typeof SpaceSpaceIdRoute
    }
    '/space/$spaceId/chat': {
      id: '/space/$spaceId/chat'
      path: '/chat'
      fullPath: '/space/$spaceId/chat'
      preLoaderRoute: typeof SpaceSpaceIdChatRouteImport
      parentRoute: typeof SpaceSpaceIdRoute
    }
  }
}

interface SpaceSpaceIdRouteChildren {
  SpaceSpaceIdChatRoute: typeof SpaceSpaceIdChatRoute
  SpaceSpaceIdPlaygroundRoute: typeof SpaceSpaceIdPlaygroundRoute
  SpaceSpaceIdPublicIntegrationRoute: typeof SpaceSpaceIdPublicIntegrationRoute
  SpaceSpaceIdUsersRoute: typeof SpaceSpaceIdUsersRoute
  SpaceSpaceIdIndexRoute: typeof SpaceSpaceIdIndexRoute
}

const SpaceSpaceIdRouteChildren: SpaceSpaceIdRouteChildren = {
  SpaceSpaceIdChatRoute: SpaceSpaceIdChatRoute,
  SpaceSpaceIdPlaygroundRoute: SpaceSpaceIdPlaygroundRoute,
  SpaceSpaceIdPublicIntegrationRoute: SpaceSpaceIdPublicIntegrationRoute,
  SpaceSpaceIdUsersRoute: SpaceSpaceIdUsersRoute,
  SpaceSpaceIdIndexRoute: SpaceSpaceIdIndexRoute,
}

const SpaceSpaceIdRouteWithChildren = SpaceSpaceIdRoute._addFileChildren(
  SpaceSpaceIdRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticateSuccessRoute: AuthenticateSuccessRoute,
  LoginLazyRoute: LoginLazyRoute,
  PlaygroundLazyRoute: PlaygroundLazyRoute,
  AccountInboxInboxIdRoute: AccountInboxInboxIdRoute,
  FriendsAccountIdRoute: FriendsAccountIdRoute,
  SpaceSpaceIdRoute: SpaceSpaceIdRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
